{
    "steps": [
        {
            "id": 1,
            "options": [
                {
                    "authenticator": "BasicAuthenticator",
                    "idp": "LOCAL"
                },
                {
                    "authenticator": "FIDOAuthenticator",
                    "idp": "LOCAL"
                }
            ]
        }
    ],
    "script": "var onLoginRequest = function(context) {\n\texecuteStep(1, {\n\t\tonFail: function (context) {\n\n\t\t\tvar authenticatorStatus = context.request.params.scenario; \n\n\t\t\t// If it is a passkey progressive enrollment request trigger the following flow.\n\t\t\tif (authenticatorStatus != null && authenticatorStatus[0] == 'INIT_FIDO_ENROL' ) { \n\n\t\t\t\tvar filteredAuthenticationOptions = filterAuthenticators(context.steps[1].options);\n\t\t\t\texecuteStep(1, {\n\t\t\t\t\tstepOptions: {\n\t\t\t\t\t\tmarkAsSubjectIdentifierStep: 'true',\n\t\t\t\t\t\tmarkAsSubjectAttributeStep: 'true'\n\t\t\t\t\t},\n\t\t\t\t\tauthenticationOptions: filteredAuthenticationOptions\n\t\t\t\t\t},{\n\t\t\t\t\tonSuccess: function (context) {\n\t\t\t\t\t\t// If user got successfully authenticated \n\t\t\t\t\t\texecuteStep(1, {\n\t\t\t\t\t\t\tauthenticationOptions: [{authenticator:'FIDOAuthenticator'}]\n\t\t\t\t\t\t}, {});\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar filterAuthenticators = function(stepOptionsString) {\n\n\tstepOptionsString = stepOptionsString.toString();\n\n\tvar excludeAuthenticator = 'FIDOAuthenticator';\n\n\tvar idpMatches = stepOptionsString.match(/idp=[^,]+/g) || [];\n\tvar idpValues = idpMatches.map(function(item) {\n\t\treturn item.split('=')[1];\n\t});\n\n\tvar authenticatorMatches = stepOptionsString.match(/authenticator=[^,}]+/g) || [];\n\tvar authenticatorValues = authenticatorMatches.map(function(item) {\n\t\treturn item.split('=')[1];\n\t});\n\n\tvar result = [];\n\n\tfor (var i = 0; i < idpValues.length; i++) {\n\t\tvar idp = idpValues[i];\n\t\tvar authenticator = authenticatorValues[i];\n\n\t\tif (idp === 'LOCAL' && authenticator !== excludeAuthenticator) {\n\t\t\tresult.push({'authenticator': authenticator});\n\t\t} else if (idp !== 'LOCAL') {\n\t\t\tresult.push({'idp': idp});\n\t\t}\n\t}\n\n\treturn result;\n};"
}
